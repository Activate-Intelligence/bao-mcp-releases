name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create source archive
        run: |
          # Create archive with source files (excluding build artifacts)
          tar -czf source.tar.gz \
            --exclude=node_modules \
            --exclude=.git \
            --exclude=dist \
            --exclude=.updates \
            --exclude='*.log' \
            src/ package.json tsconfig.json

      - name: Generate checksum
        id: checksum
        run: |
          CHECKSUM=$(shasum -a 256 source.tar.gz | cut -d' ' -f1)
          echo "checksum=$CHECKSUM" >> $GITHUB_OUTPUT
          echo "Checksum: $CHECKSUM"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./source.tar.gz
          asset_name: source.tar.gz
          asset_content_type: application/gzip

      - name: Update releases.json
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          DATE=$(date -u +"%Y-%m-%d")
          
          # Create updated releases.json
          cat > releases.json << EOF
          {
            "latest": "$VERSION",
            "minimum": "1.0.0",
            "releases": [
              {
                "version": "$VERSION",
                "date": "$DATE",
                "url": "https://github.com/${{ github.repository }}/releases/download/v$VERSION/source.tar.gz",
                "checksum": "${{ steps.checksum.outputs.checksum }}",
                "breaking": false,
                "notes": "Release $VERSION"
              }
            ]
          }
          EOF

      - name: Commit updated releases.json
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add releases.json
          git commit -m "Update releases.json for version ${GITHUB_REF#refs/tags/v}" || exit 0
          git push origin HEAD:main